Python Programming Review

Part 2: Starting Python and VS Code
Step 1: Start Python
python3 -V
Step 2: Use the Interpreter as a calculator
>>> 2+3
5
>>> 10-4
6
>>> 2*4
8
>>> 20/5
4.0
>>> 3**2
9
Step 3: Use the interactive interpreter to print a string
>>> "Hello World!"
'Hello World!'
>>> 'Hello World!'
'Hello World!'
>>> print("Hello World!")
Hello World!
>>> quit()
devasc@labvm:~$
Step 4: Open VS Code and create a script for Hello World
devasc@labvm:~/labs/devnet-src/python$ python3 hello-world.py
Hello World!
devasc@labvm:~/labs/devnet-src/python$
devasc@labvm:~$ python3 ~/labs/devnet-src/python/hello-world.py
Hello World!
devasc@labvm:~$

Part 3: Review Data Types and Variables
Step 1: Use the interactive interpreter to review basic data types
devasc@labvm:~/labs/devnet-src$ python3
Python 3.8.2 (default, Mar 13 2020, 10:14:16)
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> type(98)
<class 'int'>
>>> type(98.6)
<class 'float'>
>>> type("Hi!")
<class 'str'>
>>> type(True)
<class 'bool'>

Step 2: Review different Boolean operators
>>> 1<2
True
>>> 1<1
False
>>> 1==1
True
>>> 1>=1
True
>>> 1<=1
True

Step 3: Use the interpreter to create and use a variable
>>> x=3
>>> x*5
15
>>> "Cisco"*x
'CiscoCiscoCisco'

Step 4: Use the interpreter to concatenate multiple string variables
>>> str1="Cisco"
>>> str2="Networking"
>>> str3="Academy"
>>> space=" "
>>> print(str1+space+str2+space+str3)
Cisco Networking Academy

>>> print(str1,str2,str3)
Cisco Networking Academy

Step 5: Reviewing casting and printing different data types
>>> x=3
>>> print("The value of x is " + x)
Traceback (most recent call last):
File "<stdin>", line 1, in <module> TypeError: can only concatenate str (not "int") to str
>>>

>>> print("The value of x is " + str(x))
The value of x is 3
>>> type(x)
<class 'int'>

Part 4: Review Lists and Dictionaries
Step 1: Create and manipulate a list
Step 2: Create and manipulate a dictionary

Part 5: Review the Input Function
Step 1: Create a variable to store user input and then display the value
Step 2: Create a script to collect personal information

Part 6: Review If, For, and While Functions
Step 1: Create an if/else function
Step 2: Create an if/elif/else function
Step 3: Create a for loop
Step 4: While Loop
Step 5: Use a while loop to check for a user quit command

Part 7: Review Methods for File Access
Step 1: Create a program that reads an external file
Step 2: Remove the blank lines from the output
Step 3: Copy the content of a file into a list variable
Step 4: Challenge: Create a script to allow the user to add devices

Explore Python Development Tools

Part 1: Launch the DEVASC VM

Part 2: Review the Python Installation

Part 3: PIP and Python Virtual Environments
Step 1: Create a Python 3 virtual environment
Step 2: Activate and test the Python 3 virtual environment
Step 3: Check the current packages installed in the system environment

Part 4: Sharing Your Virtual Environment

Explore Python Classes

Part 1: Launch the DEVASC VM

Part 2: Review Functions, Methods, and Classes
Step 1: What is a function?
Step 2: What is a method?

Part 3: Define a Function

Part 4: Define a Class with Methods
Step 1: Define and then instantiate a class with the __init__() method
Step 2: Add a method to the Location class
Step 3: Instantiate the Location class multiple times and call the myLocation method
Step 4: Review the complete myLocation.py script

Part 5: Review the circleClass.py Script

